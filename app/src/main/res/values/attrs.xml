<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color"/>
        <attr name="pstsIndicatorHeight" format="dimension"/>
        <attr name="pstsUnderlineColor" format="color"/>
        <attr name="pstsUnderlineHeight" format="dimension"/>
        <attr name="pstsDividerColor" format="color"/>
        <attr name="pstsDividerWidth" format="dimension"/>
        <attr name="pstsDividerPadding" format="dimension"/>
        <attr name="pstsScrollOffset" format="dimension"/>
        <attr name="pstsShouldExpand" format="boolean"/>
        <attr name="pstsPaddingMiddle" format="boolean"/>
        <attr name="pstsTabPaddingLeftRight" format="dimension"/>
        <attr name="pstsTabBackground" format="reference"/>
        <attr name="pstsTabTextSize" format="dimension"/>
        <attr name="pstsTabTextColor" format="reference"/>
        <attr name="pstsTabTextStyle" format="reference">
            <flag name="normal" value="0x0"/>
            <flag name="bold" value="0x1"/>
            <flag name="italic" value="0x2"/>
        </attr>
        <attr name="pstsTabTextAllCaps" format="boolean"/>
        <attr name="pstsTabTextAlpha" format="integer"/>
        <attr name="pstsTabTextFontFamily" format="string"/>
    </declare-styleable>

    <declare-styleable name="MySwitch">
        <!-- Drawable to use as the "thumb" that switches back and forth. -->
        <attr name="MySwitchthumb" format="reference"/>
        <!-- Drawable to use as the "track" that the switch thumb slides within. -->
        <attr name="MySwitchtrack" format="reference"/>
        <!-- Text to use when the switch is in the checked/"on" state. -->
        <attr name="MySwitchtextOn" format="reference|string"/>
        <!-- Text to use when the switch is in the unchecked/"off" state. -->
        <attr name="MySwitchtextOff" format="reference|string"/>

        <!-- drawablw to use when the switch is in the checked/"on" state. -->
        <attr name="drawableOn" format="reference"/>
        <!-- drawablw to use when the switch is in the unchecked/"off" state. -->
        <attr name="drawableOff" format="reference"/>

        <!-- if the switch should operate like iOS UISwitch -->
        <attr name="pushStyle" format="boolean"/>
        <!-- if text should be drawn on the Thumb or On the track. -->
        <attr name="textOnThumb" format="boolean"/>
        <!-- if the thumb should be allowed to move more beyond the switch boundaries -->
        <attr name="thumbExtraMovement" format="dimension"/>
        <!-- Amount of padding on either side of text within the switch thumb. -->
        <attr name="MySwitchthumbTextPadding" format="dimension"/>
        <!-- Amount of padding on either side of text within the switch track. -->
        <attr name="trackTextPadding" format="dimension"/>
        <!-- TextAppearance style for text displayed on the switch thumb. -->
        <attr name="switchTextAppearanceAttrib" format="reference"/>
        <!-- Minimum width for the switch component -->
        <attr name="MySwitchswitchMinWidth" format="dimension"/>
        <!-- Minimum height for the switch component -->
        <attr name="switchMinHeight" format="dimension"/>
        <!-- Minimum space between the switch and caption text -->
        <attr name="MySwitchswitchPadding" format="dimension"/>

        <attr name="orientation">
            <!-- the switch moves only on the x-axis(horizontally) -->
            <enum name="horizontal" value="1"/>
            <!-- the switch moves only on the y-axis(vertically) -->
            <enum name="vertical" value="0"/>
        </attr>

        <!-- the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency -->
        <!-- The background when left side of the switch is visible -->
        <attr name="leftBackground" format="reference"/>

        <!-- The background when right side of the switch is visible -->
        <attr name="rightBackground" format="reference"/>

        <!-- We need a mask drawable to mask the background, then draw the track -->
        <attr name="backgroundMask" format="reference"/>
    </declare-styleable>

    <declare-styleable name="mySwitchTextAppearanceAttrib">
        <!-- Text color. -->
        <attr name="MySwitchtextColor" format="color"/>
        <!-- Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). -->
        <attr name="MySwitchtextSize" format="dimension"/>
        <!-- Style (bold, italic, bolditalic) for the text. -->
        <attr name="MySwitchtextStyle">
            <flag name="normal" value="0"/>
            <flag name="bold" value="1"/>
            <flag name="italic" value="2"/>
        </attr>

        <!-- Typeface (normal, sans, serif, monospace) for the text. -->
        <attr name="MySwitchtypeface" format="reference">
            <enum name="normal" value="0"/>
            <enum name="sans" value="1"/>
            <enum name="serif" value="2"/>
            <enum name="monospace" value="3"/>
        </attr>
        <!-- Color of the text selection highlight. -->
        <attr name="MySwitchtextColorHighlight" format="color"/>
        <!-- Color of the hint text. -->
        <attr name="MySwitchtextColorHint" format="color"/>
        <!-- Color of the links. -->
        <attr name="MySwitchtextColorLink" format="color"/>
        <!-- Present the text in ALL CAPS. This may use a small-caps form when available. -->
        <attr name="MySwitchtextAllCaps" format="boolean"/>
    </declare-styleable>
    <!-- Default style for the Switch widget. -->
    <attr name="mySwitchStyleAttr" format="reference"/>

    <declare-styleable name="RoundedImagesView">
        <attr name="corner_radius" format="dimension"/>
        <attr name="border_width" format="dimension"/>
        <attr name="border_color" format="color"/>
        <attr name="round_background" format="boolean"/>
        <attr name="is_oval" format="boolean"/>
        <attr name="android:scaleType"/>
    </declare-styleable>

    <declare-styleable name="IconTitle">
        <attr name="page_icon" format="reference"/>
        <attr name="page_title" format="string"/>
    </declare-styleable>

    <!--Material attrs-->
    <declare-styleable name="BaseTheme">
        <attr name="actionBarIconColor" format="color"/>
        <attr name="actionBarInsetStart" format="dimension"/>
        <attr name="spinnerBarInsetStart" format="dimension"/>
        <attr name="popupItemBackground" format="reference"/>
        <attr name="cardItemForeground" format="reference"/>
        <attr name="cardItemForegroundBorderless" format="reference"/>

    </declare-styleable>

    <declare-styleable name="DrawShadowFrameLayout">
        <attr name="shadowDrawable" format="reference"/>
        <attr name="shadowVisible" format="boolean"/>
    </declare-styleable>


    <!-- CircularImageView for custom shape -->
    <declare-styleable name="CircularImageView">

        <!-- Specifies whether or not to draw a circular border around the image. -->
        <attr name="border" format="boolean"/>
        <!-- Specifies the color of the border draw around the image. (if enabled) -->
        <attr name="circular_border_color" format="color"/>
        <!-- Makes the border this pixels wide. (if enabled) -->
        <attr name="circular_border_width" format="dimension"/>
        <!-- Specifies whether or not to draw a selector on this view upon touch events. -->
        <attr name="selector" format="boolean"/>
        <!-- Specifies the color of the selector draw on top of the image upon touch events. (if enabled) -->
        <attr name="selector_color" format="color"/>
        <!-- Specifies the color of the selector stroke drawn around the image upon touch events. Be sure to provide some opacity. (if enabled) -->
        <attr name="selector_stroke_color" format="color"/>
        <!-- Makes the selector stroke drawn around the image upon touch events this pixels wide. (if enabled) -->
        <attr name="selector_stroke_width" format="dimension"/>
        <!-- Specifies whether or not to draw a shadow around your circular image. -->
        <attr name="shadow" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="QuantityCounterView">
        <attr name="minCount" format="integer"/>
        <attr name="maxCount" format="integer"/>
        <attr name="count" format="integer"/>
    </declare-styleable>

    <declare-styleable name="CartItemPriceView">
        <attr name="tag" format="string"/>
        <attr name="value" format="string"/>
        <attr name="tagColor" format="color"/>
        <attr name="valueColor" format="color"/>
    </declare-styleable>

    <declare-styleable name="ActionableToast">
        <attr name="actionText" format="string"></attr>
        <attr name="messageText" format="string"></attr>
    </declare-styleable>

</resources>
